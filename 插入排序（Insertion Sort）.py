def insertion_sort(arr):
    # 插入排序的實現函數
    n = len(arr)
    for i in range(1, n):
        # 設定當前要插入的元素
        key = arr[i]
        j = i - 1
        # 將當前元素與已排序部分的元素從後往前比較
        # 將比當前元素大的元素向後移動一格
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        # 將當前元素插入到正確的位置
        arr[j + 1] = key

# 測試插入排序的範例
test_array = [12, 11, 13, 5, 6]

print("Original array:", test_array)  # 輸出原始數組
insertion_sort(test_array)
print("Sorted array:", test_array)    # 輸出排序後的數組

# 重要事項：
# - 插入排序是一種構建有序數列的算法，它的工作原理是將數組分為已排序和未排序部分，
#   並且從未排序部分取出元素，將它插入到已排序部分的正確位置。
# - 外層循環從數組的第二個元素開始，將每個元素當作要插入的元素進行處理。
# - 內層循環從已排序部分的末尾開始向前遍歷，並將比當前元素大的元素向後移動，
#   為當前元素留出插入位置。
# - 插入排序在已排序數列上效率很高，平均和最壞情況時間複雜度為 O(n^2)，
#   但在最好的情況下（數列已經部分有序）時間複雜度為 O(n)。
# - 插入排序是一種穩定排序算法，不需要額外的內存空間（就地排序，In-place Sorting）。
